
name: CI
on:
  push:
    branches: [ gatest ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    services:
      mysql:
          image: mysql:5.7
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: test
          ports:
              - 13306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        python-version: [3.8] #[3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-latest] #, windows-latest, macOS-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: actions/checkout@v2
    - name: Setup Python # Set Python version
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install brew dependencies in linux
      run: sudo apt-get install libmariadb-client-lgpl-dev libxml2-dev libssl-dev libglib2.0-dev
    - name: Install brew
      run: |
        /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
        test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
        test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
        echo "::add-path::/home/linuxbrew/.linuxbrew/bin"
    - name: Install RAPIDS brew dependencies
      run: |
        brew install gcc
        brew install r
        brew install gcc@6
        HOMEBREW_CC=gcc-6 brew install pandoc
        R -e 'install.packages(c( "rmarkdown"), repos = "http://cran.us.r-project.org")'
    # Install pip and pytest
    - name: Install RAPIDS python dependencies
      run: |
        cd rapids
        conda env create -f environment.yml -n GA_ENV
        conda activate GA_ENV
    - name: Restore RAPIDS renv environment
      run: |
        snakemake renv_install
        snakemake renv_init
        snakemake renv_restore
