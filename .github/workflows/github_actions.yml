
name: CI
on:
  push:
    branches: [ gatest ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    container:
      image: homebrew/brew
    services:
      mysql:
          image: mysql:5.7
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: test
          ports:
              - 13306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        python-version: [3.8] #[3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-latest] #, windows-latest, macOS-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    - uses: goanpeca/setup-miniconda@v1
      with:
        auto-update-conda: true
        python-version: ${{ matrix.python-version }}
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'Linux')
      with:
        path: ~/.local/share/renv
        key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
        restore-keys: |
          ${{ runner.os }}-renv-
    - uses: actions/cache@v1
      if: startsWith(runner.os, 'macOS')
      with:
        path: ~/Library/Application Support/renv
        key: ${{ runner.os }}-renv-${{ hashFiles('**/renv.lock') }}
        restore-keys: |
          ${{ runner.os }}-renv-
    - uses: actions/checkout@v2
    - name: Setup Python # Set Python version
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install RAPIDS brew dependencies
      run: |
        brew --version
        brew install gcc
        brew install pandoc
        brew install r
        R -e 'install.packages(c( "rmarkdown"), repos = "http://cran.us.r-project.org")'
    # Install pip and pytest
    - name: Install RAPIDS python dependencies
      shell: bash
      run: |
        ls -al
        conda env create -f environment.yml -n GA_ENV
        conda activate GA_ENV
    - name: Restore RAPIDS renv environment
      shell: bash -l {0}
      run: |
        snakemake renv_install
        snakemake renv_init
        snakemake renv_restore
    - name: Run tests
      shell: bash -l {0}
      run: |
        cp -r tests/data/raw/* data/raw
        snakemake --profile tests/settings -R sms_features
        python -m unittest discover tests/scripts/ -v
