
name: CI
on:
  push:
    branches: [ gatest ]

jobs:
  test:
    runs-on: ${{ matrix.os }}
    services:
      mysql:
          image: mysql:5.7
          env:
              MYSQL_ALLOW_EMPTY_PASSWORD: yes
              MYSQL_DATABASE: test
          ports:
              - 13306:3306
          options: --health-cmd="mysqladmin ping" --health-interval=10s --health-timeout=5s --health-retries=3
    strategy:
      matrix:
        python-version: [3.8] #[3.5, 3.6, 3.7, 3.8]
        os: [ubuntu-latest] #, windows-latest, macOS-latest]

    # Steps represent a sequence of tasks that will be executed as part of the job
    steps:
    # Checks-out your repository under $GITHUB_WORKSPACE, so your job can access it
    - uses: docker://homebrew/brew:latest
    - uses: actions/checkout@v2
    - name: Setup Python # Set Python version
      uses: actions/setup-python@v1
      with:
        python-version: ${{ matrix.python-version }}
    - name: Install brew dependencies in linux
      run: sudo apt-get install libmariadb-client-lgpl-dev libxml2-dev libssl-dev libglib2.0-dev
   # - name: Install brew
    #  run: |
     #   /bin/bash -c "$(curl -fsSL https://raw.githubusercontent.com/Homebrew/install/master/install.sh)"
      #  test -d ~/.linuxbrew && eval $(~/.linuxbrew/bin/brew shellenv)
       # test -d /home/linuxbrew/.linuxbrew && eval $(/home/linuxbrew/.linuxbrew/bin/brew shellenv)
        #echo "eval \$($(brew --prefix)/bin/brew shellenv)" >>~/.profile
        #echo "::add-path::/home/linuxbrew/.linuxbrew/bin"
    - name: Set up Homebrew
      id: set-up-homebrew
      run: |
        if which brew &>/dev/null; then
          HOMEBREW_REPOSITORY="$(brew --repo)"
        else
          HOMEBREW_PREFIX=/home/linuxbrew/.linuxbrew
          HOMEBREW_REPOSITORY="$HOMEBREW_PREFIX/Homebrew"
          sudo mkdir -p "$HOMEBREW_REPOSITORY/Library/Taps"
          git -C "$HOMEBREW_REPOSITORY" init
          git -C "$HOMEBREW_REPOSITORY" remote add origin "https://github.com/Homebrew/brew"
          cd "$HOMEBREW_PREFIX"
          sudo mkdir -p bin etc include lib opt sbin share var/homebrew/linked Cellar
          sudo ln -sf ../Homebrew/bin/brew "$HOMEBREW_PREFIX/bin/"
          cd -
          export PATH="$HOMEBREW_PREFIX/bin:$PATH"
          echo "::add-path::$HOMEBREW_PREFIX/bin"
        fi
        cd "$HOMEBREW_REPOSITORY"
        rm -rf "$GITHUB_WORKSPACE"
        ln -s "$HOMEBREW_REPOSITORY" "$GITHUB_WORKSPACE"
        git fetch --tags origin 2.2.15
        git checkout --force -B master FETCH_HEAD
        brew update-reset Library/Taps/homebrew/homebrew-core
        cd -
        GEMS_HASH=$(shasum -a 256 "$HOMEBREW_REPOSITORY/Library/Homebrew/Gemfile.lock" | cut -f1 -d' ')
        echo "::set-output name=gems-hash::$GEMS_HASH"
        if [ "$RUNNER_OS" = "Linux" ]; then
          sudo chown -R "$USER" "$HOMEBREW_PREFIX"
        fi

    - name: Install RAPIDS brew dependencies
      run: |
        sudo apt-get install linuxbrew-wrapper
        brew --version
        brew install gcc
        brew install pandoc
        brew install r -d -v
        echo "Finished installing r"
        R --version
        R -e 'install.packages(c( "rmarkdown"), repos = "http://cran.us.r-project.org")'
        echo "Finished installing rmarkdown"
    # Install pip and pytest
    - name: Install RAPIDS python dependencies
      run: |
        cd rapids
        conda env create -f environment.yml -n GA_ENV
        conda activate GA_ENV
    - name: Restore RAPIDS renv environment
      run: |
        snakemake renv_install
        snakemake renv_init
        snakemake renv_restore
